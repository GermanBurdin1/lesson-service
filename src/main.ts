import 'reflect-metadata'; 
import { NestFactory } from '@nestjs/core';
import { ValidationPipe } from '@nestjs/common';
import { AppModule } from './app.module';

async function bootstrap() {
  const app = await NestFactory.create(AppModule);
  
  // –ì–ª–æ–±–∞–ª—å–Ω–∞—è –≤–∞–ª–∏–¥–∞—Ü–∏—è –≤—Ö–æ–¥–Ω—ã—Ö –¥–∞–Ω–Ω—ã—Ö
  app.useGlobalPipes(new ValidationPipe({
    transform: true,
    whitelist: true,
    forbidNonWhitelisted: true,
  }));
  
  app.enableCors({
    origin: 'http://localhost:4200', // –∏–ª–∏ '*' –µ—Å–ª–∏ –≤—Ä–µ–º–µ–Ω–Ω–æ —Ä–∞–∑—Ä–µ—à–∞–µ—à—å –≤—Å—ë
  });
  
  // –î–æ–±–∞–≤–ª—è–µ–º middleware –¥–ª—è –ª–æ–≥–∏—Ä–æ–≤–∞–Ω–∏—è –≤—Å–µ—Ö –∑–∞–ø—Ä–æ—Å–æ–≤
  app.use((req, res, next) => {
    console.log('üì° –í–•–û–î–Ø–©–ò–ô –ó–ê–ü–†–û–°:', req.method, req.url);
    next();
  });
  
  await app.listen(process.env.PORT || 3000);

  // --- –î–æ–±–∞–≤—å —ç—Ç–æ—Ç –±–ª–æ–∫ –¥–ª—è –≤—ã–≤–æ–¥–∞ –≤—Å–µ—Ö —Ä–æ—É—Ç–æ–≤ ---
  const server = app.getHttpServer();
  server._events.request._router.stack.forEach((r) => {
    if (r.route) {
      console.log('[ROUTE]', r.route.path);
    }
  });
  // --- –ö–æ–Ω–µ—Ü –±–ª–æ–∫–∞ ---
}
bootstrap();